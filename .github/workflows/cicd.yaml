name: 'GitOps-Native AWS Web Stack with Terraform Cloud & Slack Integration'

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

    env:
  TF_VAR_vpc_cidr_block: ${{ secrets.TF_VAR_VPC_CIDR_BLOCK }}
  TF_VAR_env_prefix: ${{ secrets.TF_VAR_ENV_PREFIX }}
  TF_VAR_my_ip: ${{ secrets.TF_VAR_MY_IP }}
  TF_VAR_instance_type: ${{ secrets.TF_VAR_INSTANCE_TYPE }}
  TF_VAR_public_key_location: ${{ secrets.TF_VAR_PUBLIC_KEY_LOCATION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_domain_name : ${{ secrets.TF_VAR_DOMAIN_NAME }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  terraform:
    name: Terraform Format, Lint, Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init

      - name: Run TFLint
        run: tflint

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Debug Environment Variables
        run: |
          echo "vpc_cidr_block: $TF_VAR_vpc_cidr_block"
          echo "env_prefix: $TF_VAR_env_prefix"
          echo "my_ip: $TF_VAR_my_ip"
          echo "instance_type: $TF_VAR_instance_type"
          echo "public_key_location: $TF_VAR_public_key_location"
          echo "domain_name:  $TF_VAR_domain_name"

      - name: Terraform Apply (Auto-approve on dev)
        if: github.ref == 'refs/heads/dev'
        run: terraform apply -auto-approve
    
      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#gitaction_slack_terra_aws_status_alert'
        if: always()